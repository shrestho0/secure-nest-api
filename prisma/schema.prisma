// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String @id @default(ulid())
  name         String // Not null by default
  email        String @unique // Not null and unique
  passwordHash String
  role         Role   @default(USER)

  transactions Transaction[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  ADMIN
  USER
}

model BlacklistedToken {
  id        String   @id @default(ulid())
  token     String   @unique
  createdAt DateTime @default(now())
}

model Transaction {
  id     String @id @default(ulid())
  user   User   @relation(fields: [userId], references: [id])
  userId String

  amount   Int
  currency String

  presentmentAmount   Int?
  presentmentCurrency String?

  status                TransactionStatus @default(PENDING)
  stripePaymentStatus   String            @default("")
  stripePaymentIntentId String?
  stripeSessionId       String?
  stripeCustomerEmail   String?
  stripeCustomerName    String?
  stripeCountry         String?
  createdAt             DateTime          @default(now())
  expiresAt             DateTime?

  orderId String // Dummy order ID
}

enum TransactionStatus {
  PENDING
  COMPLETE
  FAILED
  CANCELLED
  REFUNDED
  REQUIRES_ACTION
  AUTHORIZED
  SUCCEEDED
}
